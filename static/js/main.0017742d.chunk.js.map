{"version":3,"sources":["mlh-prep.png","Components/Error Component.js","Components/Results Component.js","Components/Search Component.js","Components/Map.js","Components/App.js","index.js"],"names":["ErrorComponent","error","message","ResultsComponent","isLoaded","results","className","console","log","weather","main","feels_like","name","sys","country","SearchComponent","city","changeCity","type","value","onChange","event","target","Map","setIsLoaded","setResults","setError","mapContainer","useRef","map","lng","setLng","useState","lat","setLat","zoom","setZoom","useEffect","current","mapboxgl","container","style","center","on","e","fetch","lngLat","process","REACT_APP_APIKEY","then","res","json","result","ref","App","setCity","src","logo","alt","accessToken","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,G,MAAA,IAA0B,sC,OCC1B,SAASA,EAAT,GAAkC,IAATC,EAAQ,EAARA,MACtC,OACE,0CAAaA,EAAMC,WCFR,SAASC,EAAT,GAAgD,IAArBC,EAAoB,EAApBA,SAAUC,EAAU,EAAVA,QAEhD,OACI,sBAAKC,UAAU,UAAf,WACIF,GAAY,4CACbG,QAAQC,IAAIH,GACZD,GAAYC,GAAW,qCACtB,6BAAKA,EAAQI,QAAQ,GAAGC,OACxB,4CAAeL,EAAQK,KAAKC,WAA5B,WACA,4BAAG,8BAAIN,EAAQO,KAAZ,KAAoBP,EAAQQ,IAAIC,mBCThC,SAASC,EAAT,GAA8C,IAApBC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,WAE3C,OACI,uBACEC,KAAK,OACLC,MAAOH,EACPI,SAAU,SAAAC,GAAK,OAAIJ,EAAWI,EAAMC,OAAOH,U,oBCDtC,SAASI,GAAI,YAAEC,EAAF,WAAeC,EAAf,SAA2BC,IACnD,MAAMC,EAAeC,iBAAO,MACtBC,EAAMD,iBAAO,OACZE,EAAKC,GAAUC,oBAAU,OACzBC,EAAKC,GAAUF,mBAAS,QACxBG,EAAMC,GAAWJ,mBAAS,GAgCjC,OA9BAK,qBAAU,KACNR,EAAIS,UAERT,EAAIS,QAAU,IAAIC,IAAShB,IAAI,CAC3BiB,UAAWb,EAAaW,QACxBG,MAAO,qCACPC,OAAQ,CAACZ,EAAKG,GACdE,KAAMA,IAGVN,EAAIS,QAAQK,GAAG,SAAUC,IACrBC,MAAM,uDAAD,OAAwDD,EAAEE,OAAOb,IAAjE,gBAA4EW,EAAEE,OAAOhB,IAArF,+BAA+GiB,gKAAYC,mBAC/HC,MAAKC,GAAOA,EAAIC,SAChBF,MACAG,IACyB,MAAlBA,EAAM,IACV5B,GAAY,IAEZA,GAAY,GACZC,EAAW2B,OAGdnD,IACGuB,GAAY,GACZE,EAASzB,YAId,IAGC,mCACE,qBAAKoD,IAAK1B,EAAcrB,UAAU,oBCrC7B,SAASgD,IAAO,IAAD,EACFtB,mBAAS,MADP,mBACrB/B,EADqB,KACdyB,EADc,OAEIM,oBAAS,GAFb,mBAErB5B,EAFqB,KAEXoB,EAFW,OAGJQ,mBAAS,iBAHL,mBAGrBhB,EAHqB,KAGfuC,EAHe,OAIEvB,mBAAS,MAJX,mBAIrB3B,EAJqB,KAIZoB,EAJY,KAyB5B,OAnBAY,qBAAU,WACRQ,MAAM,qDAAD,OAAsD7B,EAAtD,+BAAiF+B,gKAAYC,mBAC/FC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACuB,MAAlBA,EAAM,IACR5B,GAAY,IAEZA,GAAY,GACZC,EAAW2B,OAGf,SAACnD,GACCuB,GAAY,GACZE,EAASzB,QAGd,CAACe,IAEAf,EACK,cAACD,EAAD,CAAgBC,MAAOA,IAG5B,mCACE,gCACE,qBAAKK,UAAU,OAAOkD,IAAKC,EAAMC,IAAI,kBACrC,iEACA,cAAC3C,EAAD,CAAiBC,KAAMA,EAAMC,WAAYsC,IACzC,cAACpD,EAAD,CAAkBC,SAAUA,EAAUC,QAASA,IAC/C,cAACkB,EAAD,CAAKC,YAAaA,EAAaC,WAAYA,EAAYC,SAAUA,SDvC3Ea,IAASoB,YAAc,4F,YEEvBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0017742d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mlh-prep.270f6887.png\";","\nexport default function ErrorComponent({error}) {\n  return (\n    <div>Error: {error.message}</div>\n  )\n}","\nexport default function ResultsComponent({isLoaded, results}) {\n\n    return (\n        <div className=\"Results\">\n          {!isLoaded && <h2>Loading...</h2>}\n          {console.log(results)}\n          {isLoaded && results && <>\n            <h3>{results.weather[0].main}</h3>\n            <p>Feels like {results.main.feels_like}Â°C</p>\n            <i><p>{results.name}, {results.sys.country}</p></i>\n          </>}\n        </div>\n    )\n}","\nexport default function SearchComponent({city, changeCity}) {\n\n    return (\n        <input\n          type=\"text\"\n          value={city}\n          onChange={event => changeCity(event.target.value)} />\n    )\n}","import { useEffect, useState, useRef } from \"react\";\n/* eslint import/no-webpack-loader-syntax: off */ // <---- Important for webpack to work\nimport mapboxgl from '!mapbox-gl';\n\nmapboxgl.accessToken = 'pk.eyJ1Ijoicm95Z2JldiIsImEiOiJjbDFjYzF2ajUwMHgzM2NwcXBzdWVxM3ZvIn0.2k8N-UN2Y7ZdT5vwml9QAw';\n\nexport default function Map({ setIsLoaded, setResults, setError }) {\n    const mapContainer = useRef(null);\n    const map = useRef(null);\n    const [lng, setLng] = useState(-70.9);\n    const [lat, setLat] = useState(42.35);\n    const [zoom, setZoom] = useState(9);\n\n    useEffect(() => { // mapbox\n    if (map.current) return; // initialize map only once\n\n    map.current = new mapboxgl.Map({\n        container: mapContainer.current,\n        style: 'mapbox://styles/mapbox/streets-v11',\n        center: [lng, lat],\n        zoom: zoom\n    });\n\n    map.current.on('click', (e) => {\n        fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${e.lngLat.lat}&lon=${e.lngLat.lng}&units=metric&appid=${process.env.REACT_APP_APIKEY}`)\n        .then(res => res.json())\n        .then(\n        (result) => {\n            if (result['cod'] !== 200) {\n            setIsLoaded(false)\n            } else {\n            setIsLoaded(true);\n            setResults(result);\n            }\n        },\n        (error) => {\n            setIsLoaded(true);\n            setError(error);\n        }\n        )\n    });\n    }, []);\n\n    return (\n        <>\n          <div ref={mapContainer} className=\"map-container\" />\n        </>\n    )\n}","import { useEffect, useState, useRef } from \"react\";\nimport '../App.css';\nimport logo from '../mlh-prep.png'\nimport ErrorComponent from \"./Error Component\";\nimport ResultsComponent from \"./Results Component\";\nimport SearchComponent from \"./Search Component\";\nimport Map from \"./Map\"\n\nexport default function App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [city, setCity] = useState(\"New York City\")\n  const [results, setResults] = useState(null);\n\n  useEffect(() => { // weather\n    fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${process.env.REACT_APP_APIKEY}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          if (result['cod'] !== 200) {\n            setIsLoaded(false)\n          } else {\n            setIsLoaded(true);\n            setResults(result);\n          }\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      )\n  }, [city])\n\n  if (error) {\n    return <ErrorComponent error={error} />;\n  } else {\n    return (\n      <>\n        <div>\n          <img className=\"logo\" src={logo} alt=\"MLH Prep Logo\"></img>\n          <h2>Enter a city below ðŸ‘‡</h2>\n          <SearchComponent city={city} changeCity={setCity} />\n          <ResultsComponent isLoaded={isLoaded} results={results}/>\n          <Map setIsLoaded={setIsLoaded} setResults={setResults} setError={setError} />\n        </div>\n      </>\n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport './index.css';\nimport 'mapbox-gl/dist/mapbox-gl.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}